#!/bin/bash


## help message
usage() {
echo -e "
This script uses phylogenetic pipeline to generate tree; 

XXX (need more information and likely parameter arguments) 

outputs: tree file generated by iqtree

Required arguments:
-i      input gene file, fasta-formated single gene. (It only works if file name is identical to gene name;
            e.g., gene name in fasta file: >cocntig_1_gene_12, file name could be: cocntig_1_gene_12.faa)

-n      maximium number of genes for generating tree (default: 100)



Optional arguments:
-s      file containing aa sequences added for tree generation (optional; use full path if specified)

-h, --help   show this help message
"
}

if [ -z "$1" ] || [[ $1 == -h ]] || [[ $1 == --help ]]; then
  usage
  exit 1
fi

## determine if the 1st argument is start with "-"
head=${1:0:1}
if [[ $head != - ]]; then
  echo "syntax error. You need an argument"
  usage
  exit 1
fi

## arguments, variables, and default values
gene_number_max=100
while getopts "i:n:s:" opt
do
  case $opt in
    i)
        input_gene=$OPTARG;;
    n)
        gene_number_max=$OPTARG;;
    s)
        sequences_addition=$OPTARG;;

    \?)
        echo "invalid argument"
        exit 1;;
  esac
done



## working directory
path_input=$(readlink -f $input_gene)
workDir=${path_input%/*}
cd $workDir


# ## working directory
# workDir=/fs/project/PAS1117/zhiping/MetaG/4-GlacierIce_GS3/9-9_5_revision/01_trees/02_ftsE
# cd $workDir

# ## input gene file
# input_gene=${workDir}/S3.D49_NODE_255_length_30828_30.faa

## gene number - kept for phylogenetic analysis 
# gene_number_max=100

## input blast db
input_blast_db=/fs/project/PAS1117/modules/jwisecav_pipeline/custom-refseq-2020-03-17/refseq_w_supp_cd95.dmnd

## names
input_gene_name=${input_gene##*/}
input_gene_name_1=${input_gene_name%.*}

## tools
module use /fs/project/PAS1117/modulefiles
module load jwisecav_pipeline

## self search
mkdir ${workDir}/01_input_gene
cp $input_gene ${workDir}/01_input_gene
input_gene=${workDir}/01_input_gene/${input_gene_name}

time esl-sfetch --index $input_gene
time diamond makedb --in $input_gene --db ${workDir}/01_input_gene/${input_gene_name}.dmnd --masking 0 --threads 14 --outfmt 6 --masking 0
time diamond blastp --sensitive --evalue 1e-3 --max-target-seqs 0 --query $input_gene --db $workDir/01_input_gene/${input_gene_name}.dmnd --out ${workDir}/01_input_gene/${input_gene_name}.vself.dmnd

## search
mkdir 02_blastp_output
mkdir 03_parse_diamond_output
diamond blastp --sensitive --evalue 1e-3 --max-target-seqs 0 --outfmt 6 --threads 14 --query $input_gene --db $input_blast_db --out ${workDir}/02_blastp_output/dmnd_blastp.tsv

perl /fs/project/PAS1117/modules/jwisecav_pipeline/phylo-pipe/scripts/parse_diamond.pl -i ${workDir}/02_blastp_output/dmnd_blastp.tsv -p ${workDir}/03_parse_diamond_output/diamond_parse.tsv -s ${workDir}/01_input_gene/${input_gene_name}.vself.dmnd -n 0 -m 0 -e 1
echo > ${workDir}/03_parse_diamond_output/diamond_parse.tsv.2 # not sure why it need this empty file for extracting sequences

## alien index
perl /fs/project/PAS1117/modules/jwisecav_pipeline/phylo-pipe/scripts/calculate_alien_index.pl -i ${workDir}/03_parse_diamond_output -o ${workDir}/01_input_gene/alien_index -l /fs/project/PAS1117/modules/jwisecav_pipeline/custom-refseq-2020-03-17/lineages.dmp -t /fs/project/PAS1117/modules/jwisecav_pipeline/custom-refseq-2020-03-17/ -r 10239 -g 10239 -n 100

##### make tree
## extract sequences
#gene number
gene_number_max_f=$((gene_number_max + 1))
mkdir ${workDir}/04_tree_input_seq
perl /fs/project/PAS1117/modules/jwisecav_pipeline/phylo-pipe/scripts/extract_sequences.pl -q $input_gene -s $input_gene_name_1 -h ${workDir}/03_parse_diamond_output -d /fs/project/PAS1117/modules/jwisecav_pipeline/custom-refseq-2020-03-17/refseq_w_supp_cd95.fa -o ${workDir}/04_tree_input_seq -n 1 -x $gene_number_max_f -e 1e-05

# determine if sequence was identified from database
num_sequence_db=$(grep -c "^>" ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa)
if [ $num_sequence_db -eq 0 ]; then 
  cat $input_gene > ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa
fi


# determine if addtional sequences were added; if yes, add them for tree generation
if [[ -z "${sequences_addition+x}" ]]; then
  echo "No addtional sequences were provided"
  
else  
  number_additionan_sequence=$(grep -c "^>" $sequences_addition)
  echo -e "\n\nAddtional sequences were provided (n = ${number_additionan_sequence})\n\n"
  cat ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa $sequences_addition > ${workDir}/04_tree_input_seq/${input_gene_name_1}_combined.fa
  mv ${workDir}/04_tree_input_seq/${input_gene_name_1}_combined.fa ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa
fi


#change to one line each sequence
awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' < ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa | sed '/^$/d; /^--$/d' > ${workDir}/04_tree_input_seq/${input_gene_name_1}_tem.fa
mv ${workDir}/04_tree_input_seq/${input_gene_name_1}_tem.fa ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa

# gene number extracted
gene_num=$(grep -c "^>" ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa)
echo -e "\n*** ${gene_num} genes extracted\n"
if [ $gene_num -le 2 ]; then echo "no gene extracted from db"; exit; fi

## align by mafft
mafft --reorder --bl 30 --op 1.0 --maxiterate 1000 --retree 1 --genafpair --quiet ${workDir}/04_tree_input_seq/${input_gene_name_1}.fa > ${workDir}/04_tree_input_seq/${input_gene_name_1}_aligned.fa

## trim by trimA
trimal -in ${workDir}/04_tree_input_seq/${input_gene_name_1}_aligned.fa -out ${workDir}/04_tree_input_seq/${input_gene_name_1}_aligned_trim.fa -gappyout


## iqtree
iqtree -s ${workDir}/04_tree_input_seq/${input_gene_name_1}_aligned_trim.fa -m MFP -bb 1000 -alrt 1000 -redo > log.txt

# create iTol tree
python /fs/project/PAS1117/modules/jwisecav_pipeline/phylo-pipe/scripts/create_itol_tree.py ${workDir}/04_tree_input_seq/${input_gene_name_1}_aligned_trim.fa.contree /fs/project/PAS1117/modules/jwisecav_pipeline/phylo-pipe/scripts other 10101010 general 95 /fs/project/PAS1117/modules/jwisecav_pipeline/custom-refseq-2020-03-17/

## end
echo "\n*** Tree path: ${workDir}/04_tree_input_seq/"
